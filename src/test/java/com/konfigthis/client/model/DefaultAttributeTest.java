/*
 * Personnel Data
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.DefaultAttributeCostCentersInner;
import com.konfigthis.client.model.DefaultAttributePerformanceTargetsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for DefaultAttribute
 */
public class DefaultAttributeTest {
    private final DefaultAttribute model = new DefaultAttribute();

    /**
     * Model tests for DefaultAttribute
     */
    @Test
    public void testDefaultAttribute() {
        // TODO: test DefaultAttribute
    }

    /**
     * Test the property 'attributeId'
     */
    @Test
    public void attributeIdTest() {
        // TODO: test attributeId
    }

    /**
     * Test the property 'dataType'
     */
    @Test
    public void dataTypeTest() {
        // TODO: test dataType
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'employeeId'
     */
    @Test
    public void employeeIdTest() {
        // TODO: test employeeId
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'costCenters'
     */
    @Test
    public void costCentersTest() {
        // TODO: test costCenters
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'endDate'
     */
    @Test
    public void endDateTest() {
        // TODO: test endDate
    }

    /**
     * Test the property 'durationDays'
     */
    @Test
    public void durationDaysTest() {
        // TODO: test durationDays
    }

    /**
     * Test the property 'durationHours'
     */
    @Test
    public void durationHoursTest() {
        // TODO: test durationHours
    }

    /**
     * Test the property 'halfDayAtStart'
     */
    @Test
    public void halfDayAtStartTest() {
        // TODO: test halfDayAtStart
    }

    /**
     * Test the property 'halfDayAtEnd'
     */
    @Test
    public void halfDayAtEndTest() {
        // TODO: test halfDayAtEnd
    }

    /**
     * Test the property 'performanceTargets'
     */
    @Test
    public void performanceTargetsTest() {
        // TODO: test performanceTargets
    }

    /**
     * Test the property 'performanceTargetKpis'
     */
    @Test
    public void performanceTargetKpisTest() {
        // TODO: test performanceTargetKpis
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currencySymbol'
     */
    @Test
    public void currencySymbolTest() {
        // TODO: test currencySymbol
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'overtimeHours'
     */
    @Test
    public void overtimeHoursTest() {
        // TODO: test overtimeHours
    }

    /**
     * Test the property 'bonusType'
     */
    @Test
    public void bonusTypeTest() {
        // TODO: test bonusType
    }

}
