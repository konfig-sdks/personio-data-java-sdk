/*
 * Personnel Data
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ProjectsCreateProjectRequest;
import com.konfigthis.client.model.ProjectsCreateProjectResponse;
import com.konfigthis.client.model.ProjectsGetAllResponse;
import com.konfigthis.client.model.ProjectsUpdateDataRequest;
import com.konfigthis.client.model.ProjectsUpdateDataResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private static ProjectsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProjectsApi(apiClient);
    }

    /**
     * Creates a project into the company account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectTest() throws ApiException {
        String name = null;
        Boolean active = null;
        String xPersonioPartnerID = null;
        String xPersonioAppID = null;
        ProjectsCreateProjectResponse response = api.createProject(name)
                .active(active)
                .xPersonioPartnerID(xPersonioPartnerID)
                .xPersonioAppID(xPersonioAppID)
                .execute();
        // TODO: test validations
    }

    /**
     * Deletes a project from the company account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectTest() throws ApiException {
        Integer id = null;
        api.deleteProject(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Provides a list of all company projects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        String xPersonioPartnerID = null;
        String xPersonioAppID = null;
        ProjectsGetAllResponse response = api.getAll()
                .xPersonioPartnerID(xPersonioPartnerID)
                .xPersonioAppID(xPersonioAppID)
                .execute();
        // TODO: test validations
    }

    /**
     * Updates a project with the given data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDataTest() throws ApiException {
        Integer id = null;
        String name = null;
        Boolean active = null;
        ProjectsUpdateDataResponse response = api.updateData(id)
                .name(name)
                .active(active)
                .execute();
        // TODO: test validations
    }

}
